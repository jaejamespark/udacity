The time complexity of "sort_012" is O(n) where n is the number of elements in the input list. I'm going through each element in the input list. If the element is 0, I swap the element with a element on current zero_index then increase the zero_index. If the element is 2, I swap the element with a element on current two_index then decrease the two_index. Each swaping would cost O(1). Overall, the whole operation would cost O(n).

The space complexity would be O(1) since we are looking at and working on one element at a time. We are doing in-place sorting.
